Testing for Project1.cppOur first test is to ensure that whenever the user enters a number in the menu, it calls the right menu option.First: The user selects the option 1 to run the game… Here is the output. Please ignore the MM symbols. This happens for some reason copying from the j-Grasp output terminal.              What is your name???§M  MichaelMM§MMM§M  ======================================================MM§M                   Welcome MichaelMM§M  ======================================================MM§MMM§M  1) Start a new game.MM§M  2) View top 10 High ScoresMM§M  3) Quit??§M   Please choose an option: 1MM§MMM§M  Entering game...MM§M  You have: MM§MMM§M  Intelligence: 11MM§M  Time: 41MM§M  Money: $30MM§MMM§MMM§M   You are 21 steps from the goal. Time left: 41MM§M      1) Move forward and see what happens...MM§M      2) Search for loose change. (A dollar's a dollar. Amirite?)MM§M      3) Read technical papers. (Get that intel!)MM§M      4) View your stats and progress!MM§M      5) Quit game. (Don't do it, punk!)MM§M??§M         Please choose an action:	This shows that chosing 1 selects to start a new game and does in fact start a new game.Our second test case says that we need to verify the correct outcome for answering puzzles correctly and incorrectly. Here is our case where we tested the puzzle with a correct response.      You move forward one step, and... MM§M	You have encountered a puzzle! Answer wisely to raise intelligence!!!MM§M	What did the chearleaders say to the ghost?MM§M	1.)Show your spirit! 2.)BOO 3.)Happy Halloween!MM§M	Please enter a single digit for your answer.??§M		1MM§MMM§M	Correct! You gain +2 intelligence.            This shows that our puzzle displays the correct response for a correct answer.Now, we will test a puzzle with an incorrect response.      You move forward one step, and... MM§M	You have encountered a puzzle! Answer wisely to raise intelligence!!!MM§M	How do you get a baby alien to sleep?MM§M	1.)Tuck it in bed 2.)You feed it 3.)Sing to it 4.)You rocketMM§M	Please enter a single digit for your answer.??§M		2MM§MMM§M	WRONG! You lose 2 intelligence.This shows that our puzzle displays the correct response for an incorrect answer.Our next test case said to test that movement down the hallway should decrement the length of the hall and use one time unless we run into an encounter.This is the output for a normal move where the hall length and time are decremented as desired.You are 8 steps from the goal. Time left: 11MM§M      1) Move forward and see what happens...MM§M      2) Search for loose change. (A dollar's a dollar. Amirite?)MM§M      3) Read technical papers. (Get that intel!)MM§M      4) View your stats and progress!MM§M      5) Quit game. (Don't do it, punk!)MM§M??§M   Please choose an action: 1MM§MMM§MYou move forward one step, and... MM§MNOTHING HAPPENS...MM§MMM§MYou are 7 steps from the goal. Time left: 10MM§M      1) Move forward and see what happens...MM§M      2) Search for loose change. (A dollar's a dollar. Amirite?)MM§M      3) Read technical papers. (Get that intel!)MM§M      4) View your stats and progress!MM§M      5) Quit game. (Don't do it, punk!)MM§M??§M   Please choose an action: Here we see that the initial hall length before the move is 8 and after the move it is 7, therefore the hall length is decremented properly. Also, the time is decremented by one as desired as well.Our next test case said that when the user selects to quit from the main menu, the program should end.Here are our results where the user decides to quit from the main menu. ----jGRASP exec: /Users/michaeljohnson/Desktop/Software Construction/Project1MM§MWhat is your name???§MMichaelMM§MMM§M======================================================MM§M                   Welcome MichaelMM§M======================================================MM§MMM§M1) Start a new game.MM§M2) View top 10 High ScoresMM§M3) Quit??§M   Please choose an option: 3MM§MMM§MMM©M ----jGRASP: operation complete.As you can see, the program ended as desired.The next test case we implemented was to make sure that if the user decides to quit from the game menu that the program returns to the main menu.Here are our results…You are 22 steps from the goal. Time left: 46MM§M      1) Move forward and see what happens...MM§M      2) Search for loose change. (A dollar's a dollar. Amirite?)MM§M      3) Read technical papers. (Get that intel!)MM§M      4) View your stats and progress!MM§M      5) Quit game. (Don't do it, punk!)MM§M??§M   Please choose an action: 5MM§MMM§MYou lose... loserMM§MWhat is your name???§MMichaelMM§MMM§M======================================================MM§M                   Welcome MichaelMM§M======================================================MM§MMM§M1) Start a new game.MM§M2) View top 10 High ScoresMM§M3) Quit??§M   Please choose an option: This shows that our code runs as desired because the option to quit from the game menu returns to the main menu.Our next test case says that the if the user selects to show the high scores, then the program should output the top 10 high scores to the window.Here are our results.What is your name???§MMichaelMM§MMM§M======================================================MM§M                   Welcome MichaelMM§M======================================================MM§MMM§M1) Start a new game.MM§M2) View top 10 High ScoresMM§M3) Quit??§M   Please choose an option: 2MM§MMM§M1: 42588MM§M2: 40128MM§M3: 37240MM§M4: 24708MM§M5: 20000MM§M6: 19000MM§M7: 18744MM§M8: 18000MM§M9: 16000MM§M10: 15170MM§MMM§M1) Start a new game.MM§M2) View top 10 High ScoresMM§M3) Quit??§M   Please choose an option: Here we see that when the user wants to see the top 10 high scores, indeed the top 10 high scores are output to the window..Lastly, we want to make sure that our program only accepts viable input from the user. That is, if the user inputs something that is not an option, the program will not accept it and will ask the user to reenter the input.Here are our results…What is your name???§MMichaelMM§MMM§M======================================================MM§M                   Welcome MichaelMM§M======================================================MM§MMM§M1) Start a new game.MM§M2) View top 10 High ScoresMM§M3) Quit??§M   Please choose an option: 4MM§MMM§MNot a valid choice.MM§M1) Start a new game.MM§M2) View top 10 High ScoresMM§M3) Quit??§M   Please choose an option: rMM§MMM§MNot a valid choice.MM§M1) Start a new game.MM§M2) View top 10 High ScoresMM§M3) Quit??§M   Please choose an option: gMM§MMM§MNot a valid choice.MM§M1) Start a new game.MM§M2) View top 10 High ScoresMM§M3) Quit??§M   Please choose an option: 1MM§MMM§MEntering game...MM§MYou have: MM§MMM§MIntelligence: 29MM§MTime: 48MM§MMoney: $26MM§MMM§MMM§MYou are 25 steps from the goal. Time left: 48MM§M      1) Move forward and see what happens...MM§M      2) Search for loose change. (A dollar's a dollar. Amirite?)MM§M      3) Read technical papers. (Get that intel!)MM§M      4) View your stats and progress!MM§M      5) Quit game. (Don't do it, punk!)MM§M??§M   Please choose an action: 6MM§MMM§MNot a valid choice...MM§MMM§MYou are 25 steps from the goal. Time left: 48MM§M      1) Move forward and see what happens...MM§M      2) Search for loose change. (A dollar's a dollar. Amirite?)MM§M      3) Read technical papers. (Get that intel!)MM§M      4) View your stats and progress!MM§M      5) Quit game. (Don't do it, punk!)MM§M??§M   Please choose an action: rMM§MMM§MNot a valid choice...MM§MMM§MYou are 25 steps from the goal. Time left: 48MM§M      1) Move forward and see what happens...MM§M      2) Search for loose change. (A dollar's a dollar. Amirite?)MM§M      3) Read technical papers. (Get that intel!)MM§M      4) View your stats and progress!MM§M      5) Quit game. (Don't do it, punk!)Here we see that when the user enters something that is not a menu option, the program demands that the input be reentered.This completes our testing on the project. In all normal testing, the program runs as expected and we are not encountering any bugs.